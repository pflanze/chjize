#!/bin/bash

set -euo pipefail
IFS=

error () {
    echo "$0:" "$@" >&2
    false
}

MemTotalKb () {
    local lines
    lines=$(grep -E -i ^MemTotal: /proc/meminfo)
    local wc
    wc=$(echo "$lines" | wc -l)
    if [ "$wc" -eq 1 ]; then
        if echo "$lines" | grep -E -q '.*[Kk]B$'; then
            local n
            n=$(echo "$lines" | awk '{ print $2 }')
            if echo "$n" | grep -E -q '^[0-9]+$'; then
                echo "$n"
            else
                error "can't parse /proc/meminfo (number is '$n'): $lines"
            fi
        else
            error "can't parse /proc/meminfo, not ending in KB: $lines"
        fi
    else
        error "can't parse /proc/meminfo: $lines"
    fi
}

memTotalKb=$(MemTotalKb)

haveEnoughRAMForSingleHost() {
    [ "$memTotalKb" -ge 1700000 ]
}

numJobs() {
    # if using single-host, each job needs up to 1700000; give it a
    # bit more.
    haveEnoughRAMForSingleHost
    local nmem=$(( "$memTotalKb" / 2000000 ))
    if [ "$nmem" -lt 1 ]; then
        nmem=1
    fi
    local ncpu
    ncpu=$(grep -E '^processor\b.*:' /proc/cpuinfo | wc -l)
    if [ "$ncpu" -lt "$nmem" ]; then
        echo "$ncpu"
    else
        echo "$nmem"
    fi
}


#if read -e -p "Would you like to compile Gambit in C++ mode ? (yes|y=C++, no|n=C): " ans; then
# XX hack since the current version doesn't work in C mode
ans=y
if true; then
    optcpp=
    case "$ans" in
	yes|y|Y|YES|Yes)
	    optcpp=--enable-cplusplus
	    ;;
	no|n|N|NO|No)
	    optcpp=--disable-cplusplus
	    ;;
	*)
	    echo "Please answer y or n. Aborting."
	    false
    esac

    set -x
    cd /opt/chj/gambc

    # make sure the makefile doesn't try to rebuild the .c files
    # (which would fail as gsc-comp is not available yet):
    touch configure
    find . -name "*.[ch]" -print0 | xargs -0 touch
    sleep 1
    touch lib/_gambc.c gsc/_gambcgsc.c gsi/_gambcgsi.c
    sleep 1
    touch gsc/_gsc_.c gsi/_gsi_.c
    if haveEnoughRAMForSingleHost; then
        ./configure "$optcpp" --enable-single-host
        make -j"$(numJobs)"
    else
        ./configure "$optcpp"
        make
    fi
    make install

    for f in /usr/local/Gambit-C/bin/*; do
	n=$(basename "$f")
	if [ -e /usr/local/bin/"$n" ] || [ -L /usr/local/bin/"$n" ]; then
	    /opt/chj/bin/trash /usr/local/bin/"$n"
	fi
	ln -s "$f" /usr/local/bin/
    done
else
    echo "cancelled since no answer"
    false
fi
