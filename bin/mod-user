#!/bin/bash

set -euo pipefail
IFS=

backupbranchname=backup
url=https://github.com/pflanze/chj-home.git
dirname=chj-home

usage () {
    echo "$0"
    echo "  As the current user and in the current directory (which"
    echo "  should either be the user's home dir, or /etc/skel),"
    echo "  check out $url, move the"
    echo "  checkout's .git dir to ./, add the local state of the tracked files"
    echo "  into a branch named '$backupbranchname', then reset the files to"
    echo "  the versions from $url."
    exit 1
}

if [ $# -ne 0 ]; then
    usage
fi

cancel() {
    echo "cancelled."
    exit 1
}

if [ -d .git ]; then
    if read -e -p "The directory `pwd`/.git exists already. I will move it to $HOME/.trash, continue (y/n)? " ans; then
	if [ "$ans" = "y" -o "$ans" = "yes" ]; then
	    /opt/chj/bin/trash ./.git
	else
	    cancel
	fi
    else
	cancel
    fi
fi

gpg --import /opt/chj/chjize/cj-key.asc || true
gpg --import /opt/chj/chjize/cj-key-2.asc || true
#  aha, when this is run on /etc/skel it is being run by root and
#  thus will not create the .gnupg files, of course, so after making
#  a user it still won't be there. Now instead run again in
#  `chj-home`'s `.chj-home/init`.

export GIT_AUTHOR_NAME="chjize's mod-user"
export GIT_AUTHOR_EMAIL=${EMAIL-you@example.com}
export GIT_COMMITTER_NAME="chjize's mod-user"
export GIT_COMMITTER_EMAIL=${EMAIL-you@example.com}

set -x

if [ -d ./"$dirname" ]; then
    /opt/chj/bin/trash ./"$dirname"
fi
git clone "$url"
mv "$dirname/.git" .
/opt/chj/bin/trash ./"$dirname"
/opt/chj/bin/mvnumber .gitignore .gitignore_global || true
git checkout .gitignore .gitignore_global
git add . && git commit -a -m "files before running chjize's $0" || true
/opt/chj/chjize/bin/checkout-latest-release -v

