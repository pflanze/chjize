#!/bin/bash

set -euo pipefail
IFS=

cd /opt/chj/chjize

usage () {
    {
        echo "$0 [make options] [target(s)]"
        echo "  Runs the given targets."
        echo
        make -s -f targets.mk help
    } | less # --quit-if-one-screen
    exit 0
}

if [ $# -gt 0 ]; then
    if [ "$1" = "-h" -o "$1" = "--help" ]; then
        usage
    fi
fi


export MESSAGEBASE=/opt/chj/chjize/.messages
mkdir -p "$MESSAGEBASE"

LOGDIR=/opt/chj/chjize/.log
mkdir -p "$LOGDIR"

log=$(mktemp --tmpdir="$LOGDIR" --suff -chjize)

tail -f "$log" --pid="$$" &

if make -f targets.mk "$@" >> "$log" 2>&1; then
    # give tail -f time to catch up before going on (hack):
    sleep 0.3
    echo OK.
else
    # give tail -f time to catch up before exiting
    sleep 1.1
    echo "(For all messages, see log file at $log)"
    false
fi


# If successful [or always?, but now keeping messages from
# unsuccessful runs around until a successful one, which is probably
# better], show the messages:

ruler () {
    printf '%q\n' --------------------------------------------------------------------
}

seen_msgs=0

while read msgfile; do
    ruler
    printf 'Message %q:\n' "$msgfile"
    cat "$MESSAGEBASE/$msgfile"
    seen_msgs=1
done < <(ls "$MESSAGEBASE")

if [ "$seen_msgs" = 1 ]; then
    ruler
fi

# now that they have been shown, remove the messages:
rm -rf "$MESSAGEBASE"

