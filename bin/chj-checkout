#!/bin/bash

set -euo pipefail
IFS=


usage () {
    echo "$0 tag url subdir [release-regex [ >|>= mintagname ]]"
    echo "  check out and verify latest release \$url into /opt/chj/\$subdir,"
    echo "  (optionally requiring it to be mintagname or larger),"
    echo "  then touch \$tag"
    exit 1
}

if [ $# -eq 3 ] || \
   [ $# -eq 4 ] || \
   [ $# -eq 6 ]; then
    true
else
    usage
fi


tag=$1
url=$2
subdir=$3
regex=${4-}
lteq=${5-}
mintagname=${6-}

have_mintagname=0
if [ $# -eq 6 ]; then
    have_mintagname=1
fi


source /opt/chj/chjize/lib/chj-env.bash

xcheck_location /opt/chj/chjize/bin/chj-checkout


doit () {
    set -euo pipefail
    set -x

    if [ -d "$subdir" ]; then
	cd "$subdir"
	git remote update origin

	need_tag=0
	if git commit -a "chj-checkout: commit -a"; then
	    need_tag=1
	fi
	    
	if git add . && git commit -a -m "chj-checkout: add ., commit -a"; then
	    need_tag=1
	fi

	if [ "$need_tag" = 1 ]; then
	    git tag "before_chj_checkout_$(date|sed 's/://g; s/ /_/g')"
	fi
    else 
	git clone "$url" "$subdir"
	cd "$subdir"
    fi

    if [ -n "$regex" ]; then
        if [ "$have_mintagname" = 1 ]; then
            checkout-latest-release -v -p "$regex" "$lteq" "$mintagname"
        else
	    checkout-latest-release -v -p "$regex"
        fi
    else
	checkout-latest-release -v
    fi
}



if [ "$(pwd)" = "/opt/chj/chjize" ]; then
    (
        set -euo pipefail
        set -x
        mkdir -p /opt/chj
        cd /opt/chj
        doit
    )
    touch "$tag"
else
    doit
fi


